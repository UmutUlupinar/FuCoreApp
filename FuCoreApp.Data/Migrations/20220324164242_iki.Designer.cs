// <auto-generated />
using System;
using FuCoreApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FuCoreApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220324164242_iki")]
    partial class iki
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FuCoreApp.Core.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 3, 24, 19, 42, 41, 939, DateTimeKind.Local).AddTicks(1254),
                            IsDeleted = false,
                            Name = "Kalemler",
                            UpdatedBy = 0
                        },
                        new
                        {
                            ID = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 3, 24, 19, 42, 41, 939, DateTimeKind.Local).AddTicks(1258),
                            IsDeleted = false,
                            Name = "Defterler",
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("FuCoreApp.Core.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("InnerBarcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 3, 24, 19, 42, 41, 939, DateTimeKind.Local).AddTicks(1066),
                            InnerBarcode = "",
                            IsDeleted = false,
                            Name = "dolma kalem",
                            Price = 125.75m,
                            Stock = 100,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ID = 2,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 3, 24, 19, 42, 41, 939, DateTimeKind.Local).AddTicks(1080),
                            InnerBarcode = "",
                            IsDeleted = false,
                            Name = "Tukenmez kalem",
                            Price = 55.75m,
                            Stock = 100,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ID = 3,
                            CategoryId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 3, 24, 19, 42, 41, 939, DateTimeKind.Local).AddTicks(1082),
                            InnerBarcode = "",
                            IsDeleted = false,
                            Name = "Kurşun kalem",
                            Price = 77.75m,
                            Stock = 100,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ID = 4,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 3, 24, 19, 42, 41, 939, DateTimeKind.Local).AddTicks(1084),
                            InnerBarcode = "",
                            IsDeleted = false,
                            Name = "kareli Defter",
                            Price = 55.75m,
                            Stock = 100,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ID = 5,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 3, 24, 19, 42, 41, 939, DateTimeKind.Local).AddTicks(1086),
                            InnerBarcode = "",
                            IsDeleted = false,
                            Name = "defter",
                            Price = 55.75m,
                            Stock = 100,
                            UpdatedBy = 0
                        },
                        new
                        {
                            ID = 6,
                            CategoryId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2022, 3, 24, 19, 42, 41, 939, DateTimeKind.Local).AddTicks(1087),
                            InnerBarcode = "",
                            IsDeleted = false,
                            Name = "amel defteri",
                            Price = 85.75m,
                            Stock = 100,
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("FuCoreApp.Core.Models.Product", b =>
                {
                    b.HasOne("FuCoreApp.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FuCoreApp.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
